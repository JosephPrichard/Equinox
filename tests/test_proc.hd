
// procedure to calculate the exponent x to the nth power
fn exp(x int, n int) -> int {
    acc := 1
    i := 0
    while i < n {
        acc = acc * x
        i = i + 1
    }
    return acc
}

fn fib(n int) {
    if n <= 0 return 1
    if n == 1 return 1
    return fib(n - 2) + fib(n - 1)
}

fn sum(n int) {
    if n <= 0 return 0
    return sum(n - 1) + 1
}

fn main() {
    y = exp(8, 5)
}